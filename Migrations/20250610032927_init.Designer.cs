// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using backend_serfi.Context;

#nullable disable

namespace backend_serfi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250610032927_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PermisoRoles", b =>
                {
                    b.Property<long>("PermisosId")
                        .HasColumnType("bigint");

                    b.Property<long>("RolesId")
                        .HasColumnType("bigint");

                    b.HasKey("PermisosId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("PermisoRoles");
                });

            modelBuilder.Entity("backend_serfi.Model.Permiso", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("NombrePermiso")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Permiso");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            NombrePermiso = "CrearUsuario"
                        },
                        new
                        {
                            Id = 2L,
                            NombrePermiso = "EditarUsuario"
                        },
                        new
                        {
                            Id = 3L,
                            NombrePermiso = "EliminarUsuario"
                        },
                        new
                        {
                            Id = 4L,
                            NombrePermiso = "LeerUsuarios"
                        },
                        new
                        {
                            Id = 5L,
                            NombrePermiso = "LeerPropiosDatos"
                        });
                });

            modelBuilder.Entity("backend_serfi.Model.RolPermiso", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("PermisoId")
                        .HasColumnType("bigint");

                    b.Property<long>("RolId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PermisoId");

                    b.HasIndex("RolId");

                    b.ToTable("RolPermiso");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            PermisoId = 1L,
                            RolId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            PermisoId = 2L,
                            RolId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            PermisoId = 3L,
                            RolId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            PermisoId = 4L,
                            RolId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            PermisoId = 5L,
                            RolId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            PermisoId = 2L,
                            RolId = 2L
                        },
                        new
                        {
                            Id = 7L,
                            PermisoId = 4L,
                            RolId = 2L
                        },
                        new
                        {
                            Id = 8L,
                            PermisoId = 5L,
                            RolId = 3L
                        });
                });

            modelBuilder.Entity("backend_serfi.Model.Roles", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Nombre = "Admin"
                        },
                        new
                        {
                            Id = 2L,
                            Nombre = "Operador"
                        },
                        new
                        {
                            Id = 3L,
                            Nombre = "Cliente"
                        });
                });

            modelBuilder.Entity("backend_serfi.Model.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RolesId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UltimaConexion")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("RolesId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "admin@admin.com",
                            NombreCompleto = "Renzo Admin",
                            Pais = "Colombia",
                            Password = "$2a$11$k8B8MR7l6SxIYzsdz/WXyeLBFS.gyZIl4urA1.1q7BgFnp6MIZyQS",
                            RoleId = 1L,
                            UltimaConexion = new DateTime(2025, 6, 8, 19, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("PermisoRoles", b =>
                {
                    b.HasOne("backend_serfi.Model.Permiso", null)
                        .WithMany()
                        .HasForeignKey("PermisosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend_serfi.Model.Roles", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("backend_serfi.Model.RolPermiso", b =>
                {
                    b.HasOne("backend_serfi.Model.Permiso", "Permiso")
                        .WithMany("RolPermisos")
                        .HasForeignKey("PermisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend_serfi.Model.Roles", "Rol")
                        .WithMany("RolPermisos")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("backend_serfi.Model.User", b =>
                {
                    b.HasOne("backend_serfi.Model.Roles", null)
                        .WithMany("Users")
                        .HasForeignKey("RolesId");
                });

            modelBuilder.Entity("backend_serfi.Model.Permiso", b =>
                {
                    b.Navigation("RolPermisos");
                });

            modelBuilder.Entity("backend_serfi.Model.Roles", b =>
                {
                    b.Navigation("RolPermisos");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
